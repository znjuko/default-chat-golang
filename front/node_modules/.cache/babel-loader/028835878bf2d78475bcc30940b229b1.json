{"ast":null,"code":"import { errorCodes, constants } from 'router5';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nfunction __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n}\n\nvar value = function (arg) {\n  return function () {\n    return arg;\n  };\n};\n\nvar noop = function () {};\n\nvar isBrowser = typeof window !== 'undefined' && window.history;\n\nvar getBase = function () {\n  return window.location.pathname;\n};\n\nvar supportsPopStateOnHashChange = function () {\n  return window.navigator.userAgent.indexOf('Trident') === -1;\n};\n\nvar pushState = function (state, title, path) {\n  return window.history.pushState(state, title, path);\n};\n\nvar replaceState = function (state, title, path) {\n  return window.history.replaceState(state, title, path);\n};\n\nvar addPopstateListener = function (fn, opts) {\n  var shouldAddHashChangeListener = opts.useHash && !supportsPopStateOnHashChange();\n  window.addEventListener('popstate', fn);\n\n  if (shouldAddHashChangeListener) {\n    window.addEventListener('hashchange', fn);\n  }\n\n  return function () {\n    window.removeEventListener('popstate', fn);\n\n    if (shouldAddHashChangeListener) {\n      window.removeEventListener('hashchange', fn);\n    }\n  };\n};\n\nvar getLocation = function (opts) {\n  var path = opts.useHash ? window.location.hash.replace(new RegExp('^#' + opts.hashPrefix), '') : window.location.pathname.replace(new RegExp('^' + opts.base), ''); // Fix issue with browsers that don't URL encode characters (Edge)\n\n  var correctedPath = safelyEncodePath(path);\n  return (correctedPath || '/') + window.location.search;\n};\n\nvar safelyEncodePath = function (path) {\n  try {\n    return encodeURI(decodeURI(path));\n  } catch (_) {\n    return path;\n  }\n};\n\nvar getState = function () {\n  return window.history.state;\n};\n\nvar getHash = function () {\n  return window.location.hash;\n};\n\nvar browser = {};\n\nif (isBrowser) {\n  browser = {\n    getBase: getBase,\n    pushState: pushState,\n    replaceState: replaceState,\n    addPopstateListener: addPopstateListener,\n    getLocation: getLocation,\n    getState: getState,\n    getHash: getHash\n  };\n} else {\n  browser = {\n    getBase: value(''),\n    pushState: noop,\n    replaceState: noop,\n    addPopstateListener: noop,\n    getLocation: value(''),\n    getState: value(null),\n    getHash: value('')\n  };\n}\n\nvar safeBrowser = browser;\nvar defaultOptions = {\n  forceDeactivate: true,\n  useHash: false,\n  hashPrefix: '',\n  base: '',\n  mergeState: false,\n  preserveHash: true\n};\nvar source = 'popstate';\n\nfunction browserPluginFactory(opts, browser) {\n  if (browser === void 0) {\n    browser = safeBrowser;\n  }\n\n  var options = __assign(__assign({}, defaultOptions), opts);\n\n  var transitionOptions = {\n    forceDeactivate: options.forceDeactivate,\n    source: source\n  };\n  var removePopStateListener;\n  return function browserPlugin(router) {\n    var routerOptions = router.getOptions();\n    var routerStart = router.start;\n\n    router.buildUrl = function (route, params) {\n      var base = options.base || '';\n      var prefix = options.useHash ? \"#\" + options.hashPrefix : '';\n      var path = router.buildPath(route, params);\n      return base + prefix + path;\n    };\n\n    var urlToPath = function (url) {\n      var match = url.match(/^(?:http|https):\\/\\/(?:[0-9a-z_\\-.:]+?)(?=\\/)(.*)$/);\n      var path = match ? match[1] : url;\n      var pathParts = path.match(/^(.+?)(#.+?)?(\\?.+)?$/);\n      if (!pathParts) throw new Error(\"[router5] Could not parse url \" + url);\n      var pathname = pathParts[1];\n      var hash = pathParts[2] || '';\n      var search = pathParts[3] || '';\n      return (options.useHash ? hash.replace(new RegExp('^#' + options.hashPrefix), '') : options.base ? pathname.replace(new RegExp('^' + options.base), '') : pathname) + search;\n    };\n\n    router.matchUrl = function (url) {\n      return router.matchPath(urlToPath(url));\n    };\n\n    router.start = function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      if (args.length === 0 || typeof args[0] === 'function') {\n        routerStart.apply(void 0, __spreadArrays([browser.getLocation(options)], args));\n      } else {\n        routerStart.apply(void 0, args);\n      }\n\n      return router;\n    };\n\n    router.replaceHistoryState = function (name, params, title) {\n      if (params === void 0) {\n        params = {};\n      }\n\n      if (title === void 0) {\n        title = '';\n      }\n\n      var route = router.buildState(name, params);\n      var state = router.makeState(route.name, route.params, router.buildPath(route.name, route.params), {\n        params: route.meta\n      });\n      var url = router.buildUrl(name, params);\n      router.lastKnownState = state;\n      browser.replaceState(state, title, url);\n    };\n\n    function updateBrowserState(state, url, replace) {\n      var trimmedState = state ? {\n        meta: state.meta,\n        name: state.name,\n        params: state.params,\n        path: state.path\n      } : state;\n      var finalState = options.mergeState === true ? __assign(__assign({}, browser.getState()), trimmedState) : trimmedState;\n      if (replace) browser.replaceState(finalState, '', url);else browser.pushState(finalState, '', url);\n    }\n\n    function onPopState(evt) {\n      var routerState = router.getState(); // Do nothing if no state or if last know state is poped state (it should never happen)\n\n      var newState = !evt.state || !evt.state.name;\n      var state = newState ? router.matchPath(browser.getLocation(options), source) : router.makeState(evt.state.name, evt.state.params, evt.state.path, __assign(__assign({}, evt.state.meta), {\n        source: source\n      }), evt.state.meta.id);\n      var defaultRoute = routerOptions.defaultRoute,\n          defaultParams = routerOptions.defaultParams;\n\n      if (!state) {\n        // If current state is already the default route, we will have a double entry\n        // Navigating back and forth will emit SAME_STATES error\n        defaultRoute && router.navigateToDefault(__assign(__assign({}, transitionOptions), {\n          reload: true,\n          replace: true\n        }));\n        return;\n      }\n\n      if (routerState && router.areStatesEqual(state, routerState, false)) {\n        return;\n      }\n\n      router.transitionToState(state, routerState, transitionOptions, function (err, toState) {\n        if (err) {\n          if (err.redirect) {\n            var _a = err.redirect,\n                name_1 = _a.name,\n                params = _a.params;\n            router.navigate(name_1, params, __assign(__assign({}, transitionOptions), {\n              replace: true,\n              force: true,\n              redirected: true\n            }));\n          } else if (err.code === errorCodes.CANNOT_DEACTIVATE) {\n            var url = router.buildUrl(routerState.name, routerState.params);\n\n            if (!newState) {\n              // Keep history state unchanged but use current URL\n              updateBrowserState(state, url, true);\n            } // else do nothing or history will be messed up\n            // TODO: history.back()?\n\n          } else {\n            // Force navigation to default state\n            defaultRoute && router.navigate(defaultRoute, defaultParams, __assign(__assign({}, transitionOptions), {\n              reload: true,\n              replace: true\n            }));\n          }\n        } else {\n          router.invokeEventListeners(constants.TRANSITION_SUCCESS, toState, routerState, {\n            replace: true\n          });\n        }\n      });\n    }\n\n    function onStart() {\n      if (options.useHash && !options.base) {\n        // Guess base\n        options.base = browser.getBase();\n      }\n\n      removePopStateListener = browser.addPopstateListener(onPopState, options);\n    }\n\n    function teardown() {\n      if (removePopStateListener) {\n        removePopStateListener();\n        removePopStateListener = undefined;\n      }\n    }\n\n    function onTransitionSuccess(toState, fromState, opts) {\n      var historyState = browser.getState();\n      var hasState = historyState && historyState.meta && historyState.name && historyState.params;\n      var statesAreEqual = fromState && router.areStatesEqual(fromState, toState, false);\n      var replace = opts.replace || !hasState || statesAreEqual;\n      var url = router.buildUrl(toState.name, toState.params);\n\n      if (fromState === null && options.useHash === false && options.preserveHash === true) {\n        url += browser.getHash();\n      }\n\n      updateBrowserState(toState, url, replace);\n    }\n\n    return {\n      onStart: onStart,\n      onStop: teardown,\n      teardown: teardown,\n      onTransitionSuccess: onTransitionSuccess,\n      onPopState: onPopState\n    };\n  };\n}\n\nexport default browserPluginFactory;","map":{"version":3,"sources":["/home/znjuko/Рабочий стол/rk2/bmstu_front/default-chat-golang/front/node_modules/router5-plugin-browser/dist/index.es.js"],"names":["errorCodes","constants","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__spreadArrays","il","r","Array","k","a","j","jl","value","arg","noop","isBrowser","window","history","getBase","location","pathname","supportsPopStateOnHashChange","navigator","userAgent","indexOf","pushState","state","title","path","replaceState","addPopstateListener","fn","opts","shouldAddHashChangeListener","useHash","addEventListener","removeEventListener","getLocation","hash","replace","RegExp","hashPrefix","base","correctedPath","safelyEncodePath","search","encodeURI","decodeURI","_","getState","getHash","browser","safeBrowser","defaultOptions","forceDeactivate","mergeState","preserveHash","source","browserPluginFactory","options","transitionOptions","removePopStateListener","browserPlugin","router","routerOptions","getOptions","routerStart","start","buildUrl","route","params","prefix","buildPath","urlToPath","url","match","pathParts","Error","matchUrl","matchPath","args","_i","replaceHistoryState","name","buildState","makeState","meta","lastKnownState","updateBrowserState","trimmedState","finalState","onPopState","evt","routerState","newState","id","defaultRoute","defaultParams","navigateToDefault","reload","areStatesEqual","transitionToState","err","toState","redirect","_a","name_1","navigate","force","redirected","code","CANNOT_DEACTIVATE","invokeEventListeners","TRANSITION_SUCCESS","onStart","teardown","undefined","onTransitionSuccess","fromState","historyState","hasState","statesAreEqual","onStop"],"mappings":"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","sourcesContent":["import { errorCodes, constants } from 'router5';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\nvar value = function (arg) { return function () { return arg; }; };\r\nvar noop = function () { };\r\nvar isBrowser = typeof window !== 'undefined' && window.history;\r\nvar getBase = function () { return window.location.pathname; };\r\nvar supportsPopStateOnHashChange = function () {\r\n    return window.navigator.userAgent.indexOf('Trident') === -1;\r\n};\r\nvar pushState = function (state, title, path) {\r\n    return window.history.pushState(state, title, path);\r\n};\r\nvar replaceState = function (state, title, path) {\r\n    return window.history.replaceState(state, title, path);\r\n};\r\nvar addPopstateListener = function (fn, opts) {\r\n    var shouldAddHashChangeListener = opts.useHash && !supportsPopStateOnHashChange();\r\n    window.addEventListener('popstate', fn);\r\n    if (shouldAddHashChangeListener) {\r\n        window.addEventListener('hashchange', fn);\r\n    }\r\n    return function () {\r\n        window.removeEventListener('popstate', fn);\r\n        if (shouldAddHashChangeListener) {\r\n            window.removeEventListener('hashchange', fn);\r\n        }\r\n    };\r\n};\r\nvar getLocation = function (opts) {\r\n    var path = opts.useHash\r\n        ? window.location.hash.replace(new RegExp('^#' + opts.hashPrefix), '')\r\n        : window.location.pathname.replace(new RegExp('^' + opts.base), '');\r\n    // Fix issue with browsers that don't URL encode characters (Edge)\r\n    var correctedPath = safelyEncodePath(path);\r\n    return (correctedPath || '/') + window.location.search;\r\n};\r\nvar safelyEncodePath = function (path) {\r\n    try {\r\n        return encodeURI(decodeURI(path));\r\n    }\r\n    catch (_) {\r\n        return path;\r\n    }\r\n};\r\nvar getState = function () { return window.history.state; };\r\nvar getHash = function () { return window.location.hash; };\r\nvar browser = {};\r\nif (isBrowser) {\r\n    browser = {\r\n        getBase: getBase,\r\n        pushState: pushState,\r\n        replaceState: replaceState,\r\n        addPopstateListener: addPopstateListener,\r\n        getLocation: getLocation,\r\n        getState: getState,\r\n        getHash: getHash\r\n    };\r\n}\r\nelse {\r\n    browser = {\r\n        getBase: value(''),\r\n        pushState: noop,\r\n        replaceState: noop,\r\n        addPopstateListener: noop,\r\n        getLocation: value(''),\r\n        getState: value(null),\r\n        getHash: value('')\r\n    };\r\n}\r\nvar safeBrowser = browser;\n\nvar defaultOptions = {\r\n    forceDeactivate: true,\r\n    useHash: false,\r\n    hashPrefix: '',\r\n    base: '',\r\n    mergeState: false,\r\n    preserveHash: true\r\n};\r\nvar source = 'popstate';\r\nfunction browserPluginFactory(opts, browser) {\r\n    if (browser === void 0) { browser = safeBrowser; }\r\n    var options = __assign(__assign({}, defaultOptions), opts);\r\n    var transitionOptions = {\r\n        forceDeactivate: options.forceDeactivate,\r\n        source: source\r\n    };\r\n    var removePopStateListener;\r\n    return function browserPlugin(router) {\r\n        var routerOptions = router.getOptions();\r\n        var routerStart = router.start;\r\n        router.buildUrl = function (route, params) {\r\n            var base = options.base || '';\r\n            var prefix = options.useHash ? \"#\" + options.hashPrefix : '';\r\n            var path = router.buildPath(route, params);\r\n            return base + prefix + path;\r\n        };\r\n        var urlToPath = function (url) {\r\n            var match = url.match(/^(?:http|https):\\/\\/(?:[0-9a-z_\\-.:]+?)(?=\\/)(.*)$/);\r\n            var path = match ? match[1] : url;\r\n            var pathParts = path.match(/^(.+?)(#.+?)?(\\?.+)?$/);\r\n            if (!pathParts)\r\n                throw new Error(\"[router5] Could not parse url \" + url);\r\n            var pathname = pathParts[1];\r\n            var hash = pathParts[2] || '';\r\n            var search = pathParts[3] || '';\r\n            return ((options.useHash\r\n                ? hash.replace(new RegExp('^#' + options.hashPrefix), '')\r\n                : options.base\r\n                    ? pathname.replace(new RegExp('^' + options.base), '')\r\n                    : pathname) + search);\r\n        };\r\n        router.matchUrl = function (url) { return router.matchPath(urlToPath(url)); };\r\n        router.start = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            if (args.length === 0 || typeof args[0] === 'function') {\r\n                routerStart.apply(void 0, __spreadArrays([browser.getLocation(options)], args));\r\n            }\r\n            else {\r\n                routerStart.apply(void 0, args);\r\n            }\r\n            return router;\r\n        };\r\n        router.replaceHistoryState = function (name, params, title) {\r\n            if (params === void 0) { params = {}; }\r\n            if (title === void 0) { title = ''; }\r\n            var route = router.buildState(name, params);\r\n            var state = router.makeState(route.name, route.params, router.buildPath(route.name, route.params), { params: route.meta });\r\n            var url = router.buildUrl(name, params);\r\n            router.lastKnownState = state;\r\n            browser.replaceState(state, title, url);\r\n        };\r\n        function updateBrowserState(state, url, replace) {\r\n            var trimmedState = state\r\n                ? {\r\n                    meta: state.meta,\r\n                    name: state.name,\r\n                    params: state.params,\r\n                    path: state.path\r\n                }\r\n                : state;\r\n            var finalState = options.mergeState === true\r\n                ? __assign(__assign({}, browser.getState()), trimmedState) : trimmedState;\r\n            if (replace)\r\n                browser.replaceState(finalState, '', url);\r\n            else\r\n                browser.pushState(finalState, '', url);\r\n        }\r\n        function onPopState(evt) {\r\n            var routerState = router.getState();\r\n            // Do nothing if no state or if last know state is poped state (it should never happen)\r\n            var newState = !evt.state || !evt.state.name;\r\n            var state = newState\r\n                ? router.matchPath(browser.getLocation(options), source)\r\n                : router.makeState(evt.state.name, evt.state.params, evt.state.path, __assign(__assign({}, evt.state.meta), { source: source }), evt.state.meta.id);\r\n            var defaultRoute = routerOptions.defaultRoute, defaultParams = routerOptions.defaultParams;\r\n            if (!state) {\r\n                // If current state is already the default route, we will have a double entry\r\n                // Navigating back and forth will emit SAME_STATES error\r\n                defaultRoute &&\r\n                    router.navigateToDefault(__assign(__assign({}, transitionOptions), { reload: true, replace: true }));\r\n                return;\r\n            }\r\n            if (routerState &&\r\n                router.areStatesEqual(state, routerState, false)) {\r\n                return;\r\n            }\r\n            router.transitionToState(state, routerState, transitionOptions, function (err, toState) {\r\n                if (err) {\r\n                    if (err.redirect) {\r\n                        var _a = err.redirect, name_1 = _a.name, params = _a.params;\r\n                        router.navigate(name_1, params, __assign(__assign({}, transitionOptions), { replace: true, force: true, redirected: true }));\r\n                    }\r\n                    else if (err.code === errorCodes.CANNOT_DEACTIVATE) {\r\n                        var url = router.buildUrl(routerState.name, routerState.params);\r\n                        if (!newState) {\r\n                            // Keep history state unchanged but use current URL\r\n                            updateBrowserState(state, url, true);\r\n                        }\r\n                        // else do nothing or history will be messed up\r\n                        // TODO: history.back()?\r\n                    }\r\n                    else {\r\n                        // Force navigation to default state\r\n                        defaultRoute &&\r\n                            router.navigate(defaultRoute, defaultParams, __assign(__assign({}, transitionOptions), { reload: true, replace: true }));\r\n                    }\r\n                }\r\n                else {\r\n                    router.invokeEventListeners(constants.TRANSITION_SUCCESS, toState, routerState, { replace: true });\r\n                }\r\n            });\r\n        }\r\n        function onStart() {\r\n            if (options.useHash && !options.base) {\r\n                // Guess base\r\n                options.base = browser.getBase();\r\n            }\r\n            removePopStateListener = browser.addPopstateListener(onPopState, options);\r\n        }\r\n        function teardown() {\r\n            if (removePopStateListener) {\r\n                removePopStateListener();\r\n                removePopStateListener = undefined;\r\n            }\r\n        }\r\n        function onTransitionSuccess(toState, fromState, opts) {\r\n            var historyState = browser.getState();\r\n            var hasState = historyState &&\r\n                historyState.meta &&\r\n                historyState.name &&\r\n                historyState.params;\r\n            var statesAreEqual = fromState && router.areStatesEqual(fromState, toState, false);\r\n            var replace = opts.replace || !hasState || statesAreEqual;\r\n            var url = router.buildUrl(toState.name, toState.params);\r\n            if (fromState === null &&\r\n                options.useHash === false &&\r\n                options.preserveHash === true) {\r\n                url += browser.getHash();\r\n            }\r\n            updateBrowserState(toState, url, replace);\r\n        }\r\n        return {\r\n            onStart: onStart,\r\n            onStop: teardown,\r\n            teardown: teardown,\r\n            onTransitionSuccess: onTransitionSuccess,\r\n            onPopState: onPopState\r\n        };\r\n    };\r\n}\n\nexport default browserPluginFactory;\n"]},"metadata":{},"sourceType":"module"}