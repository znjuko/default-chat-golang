{"ast":null,"code":"var _jsxFileName = \"/home/znjuko/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/rk2/bmstu_front/default-chat-golang/front/src/pages/Messanger.js\";\nimport React from 'react';\nimport API from '../utils/API';\nimport OnlineUsers from './OnlineUsers';\nimport Chats from './Chats';\nimport connectSocket from '../utils/Socket';\nexport default class Messanger extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      chats: [],\n      online: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid h-100 mt-2\",\n      style: {\n        minHeight: '90vh'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row h-100 d-flex justify-content-center\",\n      style: {\n        minHeight: '100vh'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"h4 mt-2 text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, \"\\u0412\\u0430\\u0448\\u0438 \\u0447\\u0430\\u0442\\u044B\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Chats, {\n      history: this.props.history,\n      chats: this.state.chats,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col col-md-3 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"h4 mt-2 text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, \"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0438 \\u043E\\u043D\\u043B\\u0430\\u0439\\u043D\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(OnlineUsers, {\n      history: this.props.history,\n      online: this.state.online,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }))));\n  }\n\n  async componentDidMount() {\n    // Load async data.\n    try {\n      if (!window.socket) {\n        await connectSocket();\n      }\n\n      let mainData = await API.get('/chats', {\n        params: {\n          results: 1,\n          inc: 'chats,online'\n        }\n      }); // Парсим резульатты.\n\n      console.log(mainData);\n      let chatsData = mainData.data.chats;\n      let onlineData = mainData.data.online; // Обновляем стейт и ререндерим наш компонент.\n\n      this.setState({ ...this.state,\n        ...{\n          isLoading: false,\n          chats: chatsData,\n          online: onlineData\n        }\n      });\n    } catch (err) {\n      console.log('[DEBUG]: /chats error');\n      console.log(err);\n      const {\n        history\n      } = this.props;\n      history.push('/login');\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/znjuko/Рабочий стол/rk2/bmstu_front/default-chat-golang/front/src/pages/Messanger.js"],"names":["React","API","OnlineUsers","Chats","connectSocket","Messanger","Component","constructor","props","state","isLoading","chats","online","render","minHeight","history","componentDidMount","window","socket","mainData","get","params","results","inc","console","log","chatsData","data","onlineData","setState","err","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport API from '../utils/API';\n\nimport OnlineUsers from './OnlineUsers';\nimport Chats from './Chats';\nimport connectSocket from '../utils/Socket';\n\nexport default class Messanger extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisLoading: true,\n\t\t\tchats: [],\n\t\t\tonline: [],\n\t\t};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName='container-fluid h-100 mt-2'\n\t\t\t\tstyle={{ minHeight: '90vh' }}>\n\t\t\t\t<div\n\t\t\t\t\tclassName='row h-100 d-flex justify-content-center'\n\t\t\t\t\tstyle={{ minHeight: '100vh' }}>\n\t\t\t\t\t<div className='col-md-6'>\n\t\t\t\t\t\t<h4 className='h4 mt-2 text-left'>Ваши чаты</h4>\n\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t<Chats\n\t\t\t\t\t\t\thistory={this.props.history}\n\t\t\t\t\t\t\tchats={this.state.chats}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='col col-md-3 '>\n\t\t\t\t\t\t<h4 className='h4 mt-2 text-left'>\n\t\t\t\t\t\t\tПользователи онлайн\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t<hr />\n\t\t\t\t\t\t<OnlineUsers\n\t\t\t\t\t\t\thistory={this.props.history}\n\t\t\t\t\t\t\tonline={this.state.online}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tasync componentDidMount() {\n\t\t// Load async data.\n\t\ttry {\n\t\t\tif (!window.socket) {\n\t\t\t\tawait connectSocket();\n\t\t\t}\n\n\t\t\tlet mainData = await API.get('/chats', {\n\t\t\t\tparams: {\n\t\t\t\t\tresults: 1,\n\t\t\t\t\tinc: 'chats,online',\n\t\t\t\t},\n\t\t\t}); // Парсим резульатты.\n\n\t\t\tconsole.log(mainData);\n\n\t\t\tlet chatsData = mainData.data.chats;\n\t\t\tlet onlineData = mainData.data.online; // Обновляем стейт и ререндерим наш компонент.\n\n\t\t\tthis.setState({\n\t\t\t\t...this.state,\n\t\t\t\t...{\n\t\t\t\t\tisLoading: false,\n\t\t\t\t\tchats: chatsData,\n\t\t\t\t\tonline: onlineData,\n\t\t\t\t},\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tconsole.log('[DEBUG]: /chats error');\n\t\t\tconsole.log(err);\n\t\t\tconst { history } = this.props;\n\t\t\thistory.push('/login');\n\t\t}\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}