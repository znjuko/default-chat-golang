{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_.._Subject,_.._Subscriber,_.._Observable,_.._Subscription,_.._ReplaySubject PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject, AnonymousSubject } from '../../Subject';\nimport { Subscriber } from '../../Subscriber';\nimport { Observable } from '../../Observable';\nimport { Subscription } from '../../Subscription';\nimport { ReplaySubject } from '../../ReplaySubject';\nvar DEFAULT_WEBSOCKET_CONFIG = {\n  url: '',\n  deserializer: function (e) {\n    return JSON.parse(e.data);\n  },\n  serializer: function (value) {\n    return JSON.stringify(value);\n  }\n};\nvar WEBSOCKETSUBJECT_INVALID_ERROR_OBJECT = 'WebSocketSubject.error must be called with an object with an error code, and an optional reason: { code: number, reason: string }';\n\nvar WebSocketSubject = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(WebSocketSubject, _super);\n\n  function WebSocketSubject(urlConfigOrSource, destination) {\n    var _this = _super.call(this) || this;\n\n    if (urlConfigOrSource instanceof Observable) {\n      _this.destination = destination;\n      _this.source = urlConfigOrSource;\n    } else {\n      var config = _this._config = tslib_1.__assign({}, DEFAULT_WEBSOCKET_CONFIG);\n\n      _this._output = new Subject();\n\n      if (typeof urlConfigOrSource === 'string') {\n        config.url = urlConfigOrSource;\n      } else {\n        for (var key in urlConfigOrSource) {\n          if (urlConfigOrSource.hasOwnProperty(key)) {\n            config[key] = urlConfigOrSource[key];\n          }\n        }\n      }\n\n      if (!config.WebSocketCtor && WebSocket) {\n        config.WebSocketCtor = WebSocket;\n      } else if (!config.WebSocketCtor) {\n        throw new Error('no WebSocket constructor can be found');\n      }\n\n      _this.destination = new ReplaySubject();\n    }\n\n    return _this;\n  }\n\n  WebSocketSubject.prototype.lift = function (operator) {\n    var sock = new WebSocketSubject(this._config, this.destination);\n    sock.operator = operator;\n    sock.source = this;\n    return sock;\n  };\n\n  WebSocketSubject.prototype._resetState = function () {\n    this._socket = null;\n\n    if (!this.source) {\n      this.destination = new ReplaySubject();\n    }\n\n    this._output = new Subject();\n  };\n\n  WebSocketSubject.prototype.multiplex = function (subMsg, unsubMsg, messageFilter) {\n    var self = this;\n    return new Observable(function (observer) {\n      try {\n        self.next(subMsg());\n      } catch (err) {\n        observer.error(err);\n      }\n\n      var subscription = self.subscribe(function (x) {\n        try {\n          if (messageFilter(x)) {\n            observer.next(x);\n          }\n        } catch (err) {\n          observer.error(err);\n        }\n      }, function (err) {\n        return observer.error(err);\n      }, function () {\n        return observer.complete();\n      });\n      return function () {\n        try {\n          self.next(unsubMsg());\n        } catch (err) {\n          observer.error(err);\n        }\n\n        subscription.unsubscribe();\n      };\n    });\n  };\n\n  WebSocketSubject.prototype._connectSocket = function () {\n    var _this = this;\n\n    var _a = this._config,\n        WebSocketCtor = _a.WebSocketCtor,\n        protocol = _a.protocol,\n        url = _a.url,\n        binaryType = _a.binaryType;\n    var observer = this._output;\n    var socket = null;\n\n    try {\n      socket = protocol ? new WebSocketCtor(url, protocol) : new WebSocketCtor(url);\n      this._socket = socket;\n\n      if (binaryType) {\n        this._socket.binaryType = binaryType;\n      }\n    } catch (e) {\n      observer.error(e);\n      return;\n    }\n\n    var subscription = new Subscription(function () {\n      _this._socket = null;\n\n      if (socket && socket.readyState === 1) {\n        socket.close();\n      }\n    });\n\n    socket.onopen = function (e) {\n      var _socket = _this._socket;\n\n      if (!_socket) {\n        socket.close();\n\n        _this._resetState();\n\n        return;\n      }\n\n      var openObserver = _this._config.openObserver;\n\n      if (openObserver) {\n        openObserver.next(e);\n      }\n\n      var queue = _this.destination;\n      _this.destination = Subscriber.create(function (x) {\n        if (socket.readyState === 1) {\n          try {\n            var serializer = _this._config.serializer;\n            socket.send(serializer(x));\n          } catch (e) {\n            _this.destination.error(e);\n          }\n        }\n      }, function (e) {\n        var closingObserver = _this._config.closingObserver;\n\n        if (closingObserver) {\n          closingObserver.next(undefined);\n        }\n\n        if (e && e.code) {\n          socket.close(e.code, e.reason);\n        } else {\n          observer.error(new TypeError(WEBSOCKETSUBJECT_INVALID_ERROR_OBJECT));\n        }\n\n        _this._resetState();\n      }, function () {\n        var closingObserver = _this._config.closingObserver;\n\n        if (closingObserver) {\n          closingObserver.next(undefined);\n        }\n\n        socket.close();\n\n        _this._resetState();\n      });\n\n      if (queue && queue instanceof ReplaySubject) {\n        subscription.add(queue.subscribe(_this.destination));\n      }\n    };\n\n    socket.onerror = function (e) {\n      _this._resetState();\n\n      observer.error(e);\n    };\n\n    socket.onclose = function (e) {\n      _this._resetState();\n\n      var closeObserver = _this._config.closeObserver;\n\n      if (closeObserver) {\n        closeObserver.next(e);\n      }\n\n      if (e.wasClean) {\n        observer.complete();\n      } else {\n        observer.error(e);\n      }\n    };\n\n    socket.onmessage = function (e) {\n      try {\n        var deserializer = _this._config.deserializer;\n        observer.next(deserializer(e));\n      } catch (err) {\n        observer.error(err);\n      }\n    };\n  };\n\n  WebSocketSubject.prototype._subscribe = function (subscriber) {\n    var _this = this;\n\n    var source = this.source;\n\n    if (source) {\n      return source.subscribe(subscriber);\n    }\n\n    if (!this._socket) {\n      this._connectSocket();\n    }\n\n    this._output.subscribe(subscriber);\n\n    subscriber.add(function () {\n      var _socket = _this._socket;\n\n      if (_this._output.observers.length === 0) {\n        if (_socket && _socket.readyState === 1) {\n          _socket.close();\n        }\n\n        _this._resetState();\n      }\n    });\n    return subscriber;\n  };\n\n  WebSocketSubject.prototype.unsubscribe = function () {\n    var _socket = this._socket;\n\n    if (_socket && _socket.readyState === 1) {\n      _socket.close();\n    }\n\n    this._resetState();\n\n    _super.prototype.unsubscribe.call(this);\n  };\n\n  return WebSocketSubject;\n}(AnonymousSubject);\n\nexport { WebSocketSubject };","map":{"version":3,"sources":["../../../../src/internal/observable/dom/WebSocketSubject.ts"],"names":[],"mappings":"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","sourcesContent":["/** PURE_IMPORTS_START tslib,_.._Subject,_.._Subscriber,_.._Observable,_.._Subscription,_.._ReplaySubject PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject, AnonymousSubject } from '../../Subject';\nimport { Subscriber } from '../../Subscriber';\nimport { Observable } from '../../Observable';\nimport { Subscription } from '../../Subscription';\nimport { ReplaySubject } from '../../ReplaySubject';\nvar DEFAULT_WEBSOCKET_CONFIG = {\n    url: '',\n    deserializer: function (e) { return JSON.parse(e.data); },\n    serializer: function (value) { return JSON.stringify(value); },\n};\nvar WEBSOCKETSUBJECT_INVALID_ERROR_OBJECT = 'WebSocketSubject.error must be called with an object with an error code, and an optional reason: { code: number, reason: string }';\nvar WebSocketSubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(WebSocketSubject, _super);\n    function WebSocketSubject(urlConfigOrSource, destination) {\n        var _this = _super.call(this) || this;\n        if (urlConfigOrSource instanceof Observable) {\n            _this.destination = destination;\n            _this.source = urlConfigOrSource;\n        }\n        else {\n            var config = _this._config = tslib_1.__assign({}, DEFAULT_WEBSOCKET_CONFIG);\n            _this._output = new Subject();\n            if (typeof urlConfigOrSource === 'string') {\n                config.url = urlConfigOrSource;\n            }\n            else {\n                for (var key in urlConfigOrSource) {\n                    if (urlConfigOrSource.hasOwnProperty(key)) {\n                        config[key] = urlConfigOrSource[key];\n                    }\n                }\n            }\n            if (!config.WebSocketCtor && WebSocket) {\n                config.WebSocketCtor = WebSocket;\n            }\n            else if (!config.WebSocketCtor) {\n                throw new Error('no WebSocket constructor can be found');\n            }\n            _this.destination = new ReplaySubject();\n        }\n        return _this;\n    }\n    WebSocketSubject.prototype.lift = function (operator) {\n        var sock = new WebSocketSubject(this._config, this.destination);\n        sock.operator = operator;\n        sock.source = this;\n        return sock;\n    };\n    WebSocketSubject.prototype._resetState = function () {\n        this._socket = null;\n        if (!this.source) {\n            this.destination = new ReplaySubject();\n        }\n        this._output = new Subject();\n    };\n    WebSocketSubject.prototype.multiplex = function (subMsg, unsubMsg, messageFilter) {\n        var self = this;\n        return new Observable(function (observer) {\n            try {\n                self.next(subMsg());\n            }\n            catch (err) {\n                observer.error(err);\n            }\n            var subscription = self.subscribe(function (x) {\n                try {\n                    if (messageFilter(x)) {\n                        observer.next(x);\n                    }\n                }\n                catch (err) {\n                    observer.error(err);\n                }\n            }, function (err) { return observer.error(err); }, function () { return observer.complete(); });\n            return function () {\n                try {\n                    self.next(unsubMsg());\n                }\n                catch (err) {\n                    observer.error(err);\n                }\n                subscription.unsubscribe();\n            };\n        });\n    };\n    WebSocketSubject.prototype._connectSocket = function () {\n        var _this = this;\n        var _a = this._config, WebSocketCtor = _a.WebSocketCtor, protocol = _a.protocol, url = _a.url, binaryType = _a.binaryType;\n        var observer = this._output;\n        var socket = null;\n        try {\n            socket = protocol ?\n                new WebSocketCtor(url, protocol) :\n                new WebSocketCtor(url);\n            this._socket = socket;\n            if (binaryType) {\n                this._socket.binaryType = binaryType;\n            }\n        }\n        catch (e) {\n            observer.error(e);\n            return;\n        }\n        var subscription = new Subscription(function () {\n            _this._socket = null;\n            if (socket && socket.readyState === 1) {\n                socket.close();\n            }\n        });\n        socket.onopen = function (e) {\n            var _socket = _this._socket;\n            if (!_socket) {\n                socket.close();\n                _this._resetState();\n                return;\n            }\n            var openObserver = _this._config.openObserver;\n            if (openObserver) {\n                openObserver.next(e);\n            }\n            var queue = _this.destination;\n            _this.destination = Subscriber.create(function (x) {\n                if (socket.readyState === 1) {\n                    try {\n                        var serializer = _this._config.serializer;\n                        socket.send(serializer(x));\n                    }\n                    catch (e) {\n                        _this.destination.error(e);\n                    }\n                }\n            }, function (e) {\n                var closingObserver = _this._config.closingObserver;\n                if (closingObserver) {\n                    closingObserver.next(undefined);\n                }\n                if (e && e.code) {\n                    socket.close(e.code, e.reason);\n                }\n                else {\n                    observer.error(new TypeError(WEBSOCKETSUBJECT_INVALID_ERROR_OBJECT));\n                }\n                _this._resetState();\n            }, function () {\n                var closingObserver = _this._config.closingObserver;\n                if (closingObserver) {\n                    closingObserver.next(undefined);\n                }\n                socket.close();\n                _this._resetState();\n            });\n            if (queue && queue instanceof ReplaySubject) {\n                subscription.add(queue.subscribe(_this.destination));\n            }\n        };\n        socket.onerror = function (e) {\n            _this._resetState();\n            observer.error(e);\n        };\n        socket.onclose = function (e) {\n            _this._resetState();\n            var closeObserver = _this._config.closeObserver;\n            if (closeObserver) {\n                closeObserver.next(e);\n            }\n            if (e.wasClean) {\n                observer.complete();\n            }\n            else {\n                observer.error(e);\n            }\n        };\n        socket.onmessage = function (e) {\n            try {\n                var deserializer = _this._config.deserializer;\n                observer.next(deserializer(e));\n            }\n            catch (err) {\n                observer.error(err);\n            }\n        };\n    };\n    WebSocketSubject.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var source = this.source;\n        if (source) {\n            return source.subscribe(subscriber);\n        }\n        if (!this._socket) {\n            this._connectSocket();\n        }\n        this._output.subscribe(subscriber);\n        subscriber.add(function () {\n            var _socket = _this._socket;\n            if (_this._output.observers.length === 0) {\n                if (_socket && _socket.readyState === 1) {\n                    _socket.close();\n                }\n                _this._resetState();\n            }\n        });\n        return subscriber;\n    };\n    WebSocketSubject.prototype.unsubscribe = function () {\n        var _socket = this._socket;\n        if (_socket && _socket.readyState === 1) {\n            _socket.close();\n        }\n        this._resetState();\n        _super.prototype.unsubscribe.call(this);\n    };\n    return WebSocketSubject;\n}(AnonymousSubject));\nexport { WebSocketSubject };\n//# sourceMappingURL=WebSocketSubject.js.map\n"]},"metadata":{},"sourceType":"module"}