{"ast":null,"code":"var noop = function () {};\n\nvar loggerPlugin = function () {\n  var startGroup, endGroup;\n\n  if (console.groupCollapsed) {\n    startGroup = function (label) {\n      return console.groupCollapsed(label);\n    };\n\n    endGroup = function () {\n      return console.groupEnd();\n    };\n  } else if (console.group) {\n    startGroup = function (label) {\n      return console.group(label);\n    };\n\n    endGroup = function () {\n      return console.groupEnd();\n    };\n  } else {\n    startGroup = noop;\n    endGroup = noop;\n  }\n\n  console.info('Router started');\n  return {\n    onStop: function () {\n      console.info('Router stopped');\n    },\n    onTransitionStart: function (toState, fromState) {\n      endGroup();\n      startGroup('Router transition');\n      console.log('Transition started from state');\n      console.log(fromState);\n      console.log('To state');\n      console.log(toState);\n    },\n    onTransitionCancel: function () {\n      console.warn('Transition cancelled');\n    },\n    onTransitionError: function (toState, fromState, err) {\n      console.warn('Transition error with code ' + err.code);\n      endGroup();\n    },\n    onTransitionSuccess: function () {\n      console.log('Transition success');\n      endGroup();\n    }\n  };\n};\n\nexport default loggerPlugin;","map":{"version":3,"sources":["/home/znjuko/Рабочий стол/rk2/bmstu_front/default-chat-golang/front/node_modules/router5-plugin-logger/dist/index.es.js"],"names":["noop","loggerPlugin","startGroup","endGroup","console","groupCollapsed","label","groupEnd","group","info","onStop","onTransitionStart","toState","fromState","log","onTransitionCancel","warn","onTransitionError","err","code","onTransitionSuccess"],"mappings":"AAAA,IAAIA,IAAI,GAAG,YAAY,CAAG,CAA1B;;AACA,IAAIC,YAAY,GAAG,YAAY;AAC3B,MAAIC,UAAJ,EAAgBC,QAAhB;;AACA,MAAIC,OAAO,CAACC,cAAZ,EAA4B;AACxBH,IAAAA,UAAU,GAAG,UAAUI,KAAV,EAAiB;AAAE,aAAOF,OAAO,CAACC,cAAR,CAAuBC,KAAvB,CAAP;AAAuC,KAAvE;;AACAH,IAAAA,QAAQ,GAAG,YAAY;AAAE,aAAOC,OAAO,CAACG,QAAR,EAAP;AAA4B,KAArD;AACH,GAHD,MAIK,IAAIH,OAAO,CAACI,KAAZ,EAAmB;AACpBN,IAAAA,UAAU,GAAG,UAAUI,KAAV,EAAiB;AAAE,aAAOF,OAAO,CAACI,KAAR,CAAcF,KAAd,CAAP;AAA8B,KAA9D;;AACAH,IAAAA,QAAQ,GAAG,YAAY;AAAE,aAAOC,OAAO,CAACG,QAAR,EAAP;AAA4B,KAArD;AACH,GAHI,MAIA;AACDL,IAAAA,UAAU,GAAGF,IAAb;AACAG,IAAAA,QAAQ,GAAGH,IAAX;AACH;;AACDI,EAAAA,OAAO,CAACK,IAAR,CAAa,gBAAb;AACA,SAAO;AACHC,IAAAA,MAAM,EAAE,YAAY;AAChBN,MAAAA,OAAO,CAACK,IAAR,CAAa,gBAAb;AACH,KAHE;AAIHE,IAAAA,iBAAiB,EAAE,UAAUC,OAAV,EAAmBC,SAAnB,EAA8B;AAC7CV,MAAAA,QAAQ;AACRD,MAAAA,UAAU,CAAC,mBAAD,CAAV;AACAE,MAAAA,OAAO,CAACU,GAAR,CAAY,+BAAZ;AACAV,MAAAA,OAAO,CAACU,GAAR,CAAYD,SAAZ;AACAT,MAAAA,OAAO,CAACU,GAAR,CAAY,UAAZ;AACAV,MAAAA,OAAO,CAACU,GAAR,CAAYF,OAAZ;AACH,KAXE;AAYHG,IAAAA,kBAAkB,EAAE,YAAY;AAC5BX,MAAAA,OAAO,CAACY,IAAR,CAAa,sBAAb;AACH,KAdE;AAeHC,IAAAA,iBAAiB,EAAE,UAAUL,OAAV,EAAmBC,SAAnB,EAA8BK,GAA9B,EAAmC;AAClDd,MAAAA,OAAO,CAACY,IAAR,CAAa,gCAAgCE,GAAG,CAACC,IAAjD;AACAhB,MAAAA,QAAQ;AACX,KAlBE;AAmBHiB,IAAAA,mBAAmB,EAAE,YAAY;AAC7BhB,MAAAA,OAAO,CAACU,GAAR,CAAY,oBAAZ;AACAX,MAAAA,QAAQ;AACX;AAtBE,GAAP;AAwBH,CAvCD;;AAyCA,eAAeF,YAAf","sourcesContent":["var noop = function () { };\r\nvar loggerPlugin = function () {\r\n    var startGroup, endGroup;\r\n    if (console.groupCollapsed) {\r\n        startGroup = function (label) { return console.groupCollapsed(label); };\r\n        endGroup = function () { return console.groupEnd(); };\r\n    }\r\n    else if (console.group) {\r\n        startGroup = function (label) { return console.group(label); };\r\n        endGroup = function () { return console.groupEnd(); };\r\n    }\r\n    else {\r\n        startGroup = noop;\r\n        endGroup = noop;\r\n    }\r\n    console.info('Router started');\r\n    return {\r\n        onStop: function () {\r\n            console.info('Router stopped');\r\n        },\r\n        onTransitionStart: function (toState, fromState) {\r\n            endGroup();\r\n            startGroup('Router transition');\r\n            console.log('Transition started from state');\r\n            console.log(fromState);\r\n            console.log('To state');\r\n            console.log(toState);\r\n        },\r\n        onTransitionCancel: function () {\r\n            console.warn('Transition cancelled');\r\n        },\r\n        onTransitionError: function (toState, fromState, err) {\r\n            console.warn('Transition error with code ' + err.code);\r\n            endGroup();\r\n        },\r\n        onTransitionSuccess: function () {\r\n            console.log('Transition success');\r\n            endGroup();\r\n        }\r\n    };\r\n};\n\nexport default loggerPlugin;\n"]},"metadata":{},"sourceType":"module"}